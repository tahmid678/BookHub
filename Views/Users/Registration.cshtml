@model BookHub.Models.User

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="UTF-" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    @*<meta name="viewport" content="width=device-width" />*@
    <title>Registration</title>
    <link rel="stylesheet" href="~/Content/Registration/css/style.css" />
</head>
<body>
    <div class="wrapper">
        <div class="title">
            Registration Form
        </div>
        <div class="form">
            <div class="inputfield">
                <label>First Name</label>
                @*<input type="text" class="input">*@
                @Html.EditorFor(model => model.UserFirstName, new { htmlAttributes = new { @type = "text", @name = "UserFirstName" } })
            </div>
            <div class="inputfield">
                <label>Last Name</label>
                @*<input type="text" class="input">*@
                @Html.EditorFor(model => model.UserLastName, new { htmlAttributes = new { @type = "text", @name = "UserLastName" } })
            </div>
            <div class="inputfield">
                <label>Password</label>
                @*<input type="password" class="input">*@
                @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @type = "password", @name = "UserPassword" } })
            </div>

            <div class="inputfield">
                <label>Email Address</label>
                @*<input type="text" class="input">*@
                @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @type = "text", @name= "UserEmail" } })
            </div>
            <div class="inputfield">
                <label>Phone Number</label>
                @*<input type="text" class="input">*@
                @Html.EditorFor(model => model.UserPhoneNo, new { htmlAttributes = new { @type = "text", @name = "UserPhoneNo" } })
            </div>
            <div class="inputfield">
                <label>Address</label>
                @*<textarea class="textarea"></textarea>*@
                @Html.EditorFor(model => model.UserAddress, new { htmlAttributes = new { @class = "textarea", @name = "UserAddress" } })
            </div>
          
            <div class="inputfield">
                <input type="submit" value="Register" class="btn">
            </div>
        </div>
    </div>


    @*@Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryval")


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>User</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.UserFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserFirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserFirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserLastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserLastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserLastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserPhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserPhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserPhoneNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@
</body>
</html>
